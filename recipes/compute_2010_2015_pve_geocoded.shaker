{
  "explorationFilters": [],
  "maxProcessedMemTableBytes": -1,
  "analysisColumnData": {},
  "columnsSelection": {
    "mode": "ALL"
  },
  "globalSearchQuery": "",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "origin": "PREPARE_RECIPE",
  "sorting": [],
  "coloring": {
    "individualColumns": [],
    "scheme": "MEANING_AND_STATUS",
    "valueColoringMode": "HASH"
  },
  "steps": [
    {
      "alwaysShowComment": false,
      "preview": false,
      "params": {
        "usePythonUnicode": true,
        "stopOnError": true,
        "pythonSourceCode": "# Score minimal pour être pris en compte\nmin_score \u003d 0.5\n\ndef process(row):\n    if row[\"ban_score\"]:\n        ban_score \u003d float(row[\"ban_score\"])\n    else:\n        ban_score \u003d None\n    if row[\"bano_score\"]:\n        bano_score \u003d float(row[\"bano_score\"])\n    else:\n        bano_score \u003d None\n    if row[\"pr_score\"]:\n        pr_score \u003d float(row[\"pr_score\"])\n    else:\n        pr_score \u003d None\n    \n    # Pas de géocodage saisi dans la baac\n    if max(ban_score, bano_score, pr_score) \u003e\u003d min_score:\n        if pr_score \u003d\u003d 1.0:\n            # a eu lieu sur autoroute ou RN, on prend les coords du PR\n            row[\"longitude\"] \u003d row[\"lon_pr\"]\n            row[\"latitude\"] \u003d row[\"lat_pr\"]\n            row[\"geo_source\"] \u003d \"PR\"\n            row[\"geo_type\"] \u003d \"PR\"\n            row[\"geo_score\"] \u003d row[\"pr_score\"]            \n        # Sinon on récupère simplement celui qui a le plus gros score\n        elif ban_score \u003e\u003d bano_score:\n            row[\"longitude\"] \u003d row[\"ban_longitude\"]\n            row[\"latitude\"] \u003d row[\"ban_latitude\"]\n            row[\"geo_source\"] \u003d \"ban + citycode\"\n            row[\"geo_type\"] \u003d row[\"ban_type\"]\n            row[\"geo_score\"] \u003d row[\"ban_score\"]\n        elif bano_score \u003e min_score:\n            row[\"longitude\"] \u003d row[\"bano_longitude\"]\n            row[\"latitude\"] \u003d row[\"bano_latitude\"]\n            row[\"geo_source\"] \u003d \"bano + name\"\n            row[\"geo_type\"] \u003d row[\"bano_type\"]\n            row[\"geo_score\"] \u003d row[\"bano_score\"]\n    return row       \n",
        "mode": "ROW"
      },
      "type": "PythonUDF",
      "disabled": false,
      "metaType": "PROCESSOR"
    }
  ],
  "exploreUIParams": {
    "autoRefresh": true
  },
  "previewMode": "ALL_ROWS",
  "explorationSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false,
    "selection": {
      "targetRatio": 0.02,
      "maxRecords": 10000,
      "maxStoredBytes": -1,
      "partitionSelectionMethod": "ALL",
      "withinFirstN": -1,
      "samplingMethod": "HEAD_SEQUENTIAL",
      "latestPartitionsN": 1,
      "maxReadUncompressedBytes": -1,
      "filter": {
        "enabled": false,
        "distinct": false
      }
    }
  }
}