{
  "explorationFilters": [],
  "maxProcessedMemTableBytes": -1,
  "analysisColumnData": {},
  "columnsSelection": {
    "mode": "ALL"
  },
  "globalSearchQuery": "",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "origin": "PREPARE_RECIPE",
  "sorting": [],
  "coloring": {
    "individualColumns": [],
    "scheme": "MEANING_AND_STATUS",
    "valueColoringMode": "HASH"
  },
  "steps": [
    {
      "alwaysShowComment": false,
      "preview": true,
      "params": {
        "usePythonUnicode": true,
        "stopOnError": true,
        "column": "LIBELLE_TYPE_VOIE",
        "pythonSourceCode": "import re\n\ndef process(row):\n \n    # autoroutes\n    # extensions connues: A,B,N,S,W\n    match \u003d re.search(r\u0027A[\\s.-]*(\\d+)\\s*([ABNSW]?)(\\s|$)\u0027, row[\u0027VOIE_INFRACTION\u0027] or \u0027\u0027)\n\n    if match:\n        row[\u0027LIBELLE_TYPE_VOIE_DEDUIT\u0027] \u003d \u0027Autoroute\u0027\n        row[\u0027LIBELLE_VOIE_RN\u0027] \u003d \u0027A \u0027+ match.group(1) + match.group(2)\n        return row\n    \n\n    # routes nationales\n    # extensions connues: A,B\n    match \u003d re.search(r\u0027N[\\s.-]*(\\d+)\\s*([AB]?)(\\s|$)\u0027, row[\u0027VOIE_INFRACTION\u0027] or \u0027\u0027)\n    if match:\n        row[\u0027LIBELLE_TYPE_VOIE_DEDUIT\u0027] \u003d \u0027Route Nationale\u0027\n        row[\u0027LIBELLE_VOIE_RN\u0027] \u003d \u0027N \u0027+ match.group(1) + match.group(2)\n        return row\n    \n    return row\n\n",
        "mode": "ROW"
      },
      "type": "PythonUDF",
      "disabled": false,
      "metaType": "PROCESSOR"
    }
  ],
  "exploreUIParams": {
    "autoRefresh": true
  },
  "previewMode": "ALL_ROWS",
  "explorationSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false,
    "selection": {
      "targetRatio": 0.02,
      "maxRecords": 10000,
      "maxStoredBytes": -1,
      "partitionSelectionMethod": "ALL",
      "withinFirstN": -1,
      "samplingMethod": "HEAD_SEQUENTIAL",
      "latestPartitionsN": 1,
      "maxReadUncompressedBytes": -1,
      "filter": {
        "enabled": false,
        "distinct": false
      }
    }
  }
}